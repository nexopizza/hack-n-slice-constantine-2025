# Generated by Django 5.2.6 on 2025-09-28 18:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('stock_item_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Dough', 'Dough'), ('Cheese', 'Cheese'), ('Sauce', 'Sauce'), ('Beverage', 'Beverage'), ('Packaging', 'Packaging'), ('Meat', 'Meat'), ('Vegetable', 'Veg')], max_length=50)),
                ('unit', models.CharField(max_length=20)),
                ('par_level', models.FloatField()),
                ('price_per_unit', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('timezone', models.CharField(max_length=100)),
                ('open_at', models.TimeField()),
                ('close_at', models.TimeField()),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('features', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('USER', 'User')], default='USER', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('pfp', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('nexo_coins', models.IntegerField(blank=True, default=0, null=True)),
                ('xp', models.IntegerField(blank=True, default=0, null=True)),
                ('level', models.IntegerField(blank=True, default=1, null=True)),
                ('prefs', models.JSONField(default=dict)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_items/')),
                ('name', models.JSONField(default=dict)),
                ('category', models.CharField(choices=[('Pizza', 'Pizza'), ('Salad', 'Salad'), ('Dessert', 'Dessert'), ('Cold Drink', 'Cold Drink'), ('Hot Drink', 'Hot Drink'), ('Gelato', 'Gelato')], max_length=100)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('recipe', models.JSONField(default=list)),
                ('display_type', models.CharField(choices=[('NORMAL', 'Normal'), ('OPTIONAL', 'Optional'), ('COMBO', 'Combo'), ('PROMO', 'Promo')], max_length=20)),
                ('available', models.BooleanField(default=True)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='slice.menu')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('display_id', models.CharField(blank=True, default=uuid.uuid4, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pickup_type', models.CharField(choices=[('Takeaway', 'Takeaway'), ('Delivery', 'Delivery'), ('DineIn', 'Dinein')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('READY', 'Ready'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('items', models.JSONField(default=list)),
                ('total', models.FloatField()),
                ('payment', models.JSONField(default=dict)),
                ('source', models.CharField(blank=True, choices=[('WEBSITE', 'Website'), ('MOBILE_APP', 'Mobile App'), ('PHONE', 'Phone'), ('IN_PERSON', 'In Person')], max_length=50, null=True)),
                ('meta', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='slice.store')),
            ],
        ),
        migrations.AddField(
            model_name='menu',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='slice.store'),
        ),
    ]
